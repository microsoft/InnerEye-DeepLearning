pr:
  branches:
    include:
    - '*'

name: PR-$(Date:yyyyMMdd)$(Rev:-r)
variables:
  model: 'BasicModel2Epochs'
  train: 'True'
  more_switches: '--log_level=DEBUG --local_dataset=F:\local'
  run_recovery_id: ''
  tag: 'PR Build'
  number_of_cross_validation_splits: 0

jobs:
  - job: Windows
    pool:
      vmImage: 'windows-2019'
    steps:
      - template: build.yaml

  - job: Linux
    pool:
      vmImage: 'ubuntu-18.04'
    steps:
      - template: build.yaml

  - job: TrainInAzureML
    variables:
      - template: ../InnerEye/settings.yml
      - name: cluster
        value: 'training-nc12'
    pool:
      vmImage: 'ubuntu-18.04'
    steps:
      - template: train_template.yml
        parameters:
          wait_for_completion: 'True'
          pytest_mark: 'gpu or cpu_and_gpu or azureml'
          max_run_duration: '1h'
          more_switches: '--use_dataset_mount=True'
      - task: PublishTestResults@2
        inputs:
          testResultsFiles: '**/test-*.xml'
          testRunTitle: 'tests_on_AzureML'
        condition: succeededOrFailed()
        displayName: Publish test results
      - template: tests_after_training.yml
        parameters:
          pytest_mark: after_training
          test_run_title: tests_after_training

  # Now train a module, using the Github code as a submodule. Here, a simpler 1 channel model
  # is trained, because we use this build to also check the "submit_for_inference" code, that
  # presently only handles single channel models.
  - job: TrainInAzureMLViaSubmodule
    variables:
      - template: ../InnerEye/settings.yml
      - name: cluster
        value: 'training-nc12'
      - name: model
        value: 'BasicModel2Epochs1Channel'
    pool:
      vmImage: 'ubuntu-18.04'
    steps:
      - template: train_via_submodule.yml
        parameters:
          wait_for_completion: 'True'
          more_switches: '--use_dataset_mount=True'
          max_run_duration: '30m'

  # Train a 2-element ensemble model
  - job: TrainEnsemble
    variables:
      - template: ../InnerEye/settings.yml
      - name: cluster
        value: 'training-nc12'
      - name: model
        value: 'BasicModel2Epochs1Channel'
      - name: number_of_cross_validation_splits
        value: 2
    pool:
      vmImage: 'ubuntu-18.04'
    steps:
      - template: train_template.yml
        parameters:
          wait_for_completion: 'True'
          pytest_mark: ''
          max_run_duration: '1h'
          more_switches: '--use_dataset_mount=True'
