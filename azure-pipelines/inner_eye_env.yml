steps:
  - template: checkout.yml

  - template: store_settings.yml

  # https://docs.microsoft.com/en-us/azure/devops/pipelines/release/caching?view=azure-devops#pythonanaconda
  - task: Cache@2
    displayName: Use cached Conda environment
    inputs:
      # Beware of changing the cache key or path independently, safest to change in sync
      key: 'usr_share_miniconda_envs | "$(Agent.OS)" | environment.yml'
      path: /usr/share/miniconda/envs
      cacheHitVar: CONDA_CACHE_RESTORED

  - script: conda env create --file environment.yml
    displayName: Create Anaconda environment
    failOnStderr: false # Conda env create does not have an option to suppress warnings generated in wheel.py
    condition: eq(variables.CONDA_CACHE_RESTORED, 'false')

  - script: source activate InnerEye
    displayName: Check if InnerEye is present

  - bash: |
      source activate InnerEye
      which python
      conda info
      pip freeze
    failOnStderr: false
    displayName: Print package list and Conda info
